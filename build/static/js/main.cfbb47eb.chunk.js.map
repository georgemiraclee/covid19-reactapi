{"version":3,"sources":["components/Status.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["Grid","styled","div","Block","Status","url","useState","data","setData","loading","setLoading","error","setError","useEffect","a","fetch","then","res","json","catch","err","newData","fetchData","role","aria-label","confirmed","value","deaths","recovered","GlobalStyle","createGlobalStyle","Layout","Header","header","Content","section","Footer","footer","Intro","Home","className","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"w8CAIA,IAAMA,EAAOC,IAAOC,IAAV,KASJC,EAAQF,IAAOC,IAAV,KAqDI,SAASE,EAAT,GAA0B,IAARC,EAAO,EAAPA,IAAO,EACdC,qBADc,mBAC/BC,EAD+B,KACzBC,EADyB,OAERF,oBAAS,GAFD,mBAE/BG,EAF+B,KAEtBC,EAFsB,OAGZJ,qBAHY,mBAG/BK,EAH+B,KAGxBC,EAHwB,KAoBtC,OAhBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,6DACEJ,GAAW,GACXE,IAFF,SAGwBG,MAAMV,GACzBW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GACLR,EAASQ,MANf,OAGQC,EAHR,OAQEb,EAAQa,GACRX,GAAW,GATb,4CADc,sBAYTH,GAZU,WAAD,wBAaZe,KAED,CAACjB,EAAKE,IACLE,GAAWE,EAAc,KAE3B,kBAACX,EAAD,KACE,kBAACG,EAAD,KACE,6CAAkB,0BAAMoB,KAAK,MAAMC,aAAW,OAA5B,gBAAlB,KACA,8BAAOjB,EAAKkB,UAAUC,QAExB,kBAACvB,EAAD,KACE,yCAAc,0BAAMoB,KAAK,MAAMC,aAAW,OAA5B,gBAAd,KACA,8BAAOjB,EAAKoB,OAAOD,QAErB,kBAACvB,EAAD,KACE,sCAAW,0BAAMoB,KAAK,MAAMC,aAAW,QAA5B,gBAAX,KACA,8BAAOjB,EAAKqB,UAAUF,S,0mFC/F9B,IAAMG,EAAcC,YAAH,KA2BXC,EAAS9B,IAAOC,IAAV,KAWN8B,EAAS/B,IAAOgC,OAAV,KAyBNC,EAAUjC,IAAOkC,QAAV,KAIPC,EAASnC,IAAOoC,OAAV,KAcNC,EAAQrC,IAAOC,IAAV,KAqBI,SAASqC,IACtB,OACE,kBAACR,EAAD,KACE,kBAACF,EAAD,MACA,kBAACG,EAAD,KACE,yBAAKQ,UAAU,QAAf,aAEF,kBAACN,EAAD,KACE,kBAACI,EAAD,KACE,wEACA,8LACA,4HAEF,kBAAClC,EAAD,CAAQC,IAAI,iDAEd,kBAAC+B,EAAD,KACE,yBAAKI,UAAU,aAAf,uBAAiD,uBAAGC,KAAK,2BAA2BC,OAAO,SAASC,IAAI,uBAAvD,kBAAjD,UAAuJ,uBAAGF,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAAnE,kBCjHhJC,MANf,WACE,OACE,kBAACL,EAAD,OCOgBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdxC,OAAM,SAAAR,GACLiD,QAAQjD,MAAMA,EAAMkD,c","file":"static/js/main.cfbb47eb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n// import getData from '../utils/getData';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2rem;\n  @media screen and (max-width: 480px){\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 1rem;\n  }\n`;\nconst Block = styled.div`\n  background: #ddd;\n  background: linear-gradient(to top, #e3e3e3, #efefef);\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n  box-shadow: 4px 4px 12px rgba(0,0,0,.05),\n                -4px -4px 12px rgba(255,255,255,.3),\n                -4px -4px 12px rgba(255,255,255,.3) inset;\n\n  @media screen and (max-width: 480px){\n    padding: .5rem 1rem;\n  }\n\n  h3,h4,h5 {\n    font-size: 1.125rem;\n    font-weight: normal;\n    margin: .5rem 0;\n  }\n  h3 {\n    color: #333;\n  }\n  h4 {\n    color: #333;\n  }\n  h5 {\n    color: #333;\n  }\n  span {\n    font-size: 3rem;\n    font-weight: bold;\n    line-height: 1.2;\n  }\n  h3, h4, h5 {\n    span {\n      font-size: 1.5rem;\n    }\n  }\n  h3 + span {\n    color: #FF7849;\n  }\n  h4 + span {\n    color: #ae2b26;\n  }\n  h5 + span {\n    color: #13CE66;\n  }\n`;\n\nexport default function Status({ url }) {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      const newData = await fetch(url)\n        .then(res => res.json())\n        .catch(err => {\n          setError(err);\n        });\n      setData(newData);\n      setLoading(false);\n    }\n    if (!data) {\n      fetchData();\n    }\n  }, [url, data]);\n  if (loading || error) return null;\n  return (\n    <Grid>\n      <Block>\n        <h3>Terkonfirmasi <span role=\"img\" aria-label=\"sad\">ðŸ˜”</span>:</h3>\n        <span>{data.confirmed.value}</span>\n      </Block>\n      <Block>\n        <h4>Meninggal <span role=\"img\" aria-label=\"cry\">ðŸ˜¢</span>:</h4>\n        <span>{data.deaths.value}</span>\n      </Block>\n      <Block>\n        <h5>Sembuh <span role=\"img\" aria-label=\"glad\">ðŸ¤—</span>:</h5>\n        <span>{data.recovered.value}</span>\n      </Block>\n    </Grid>\n  );\n}","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Status from '../components/Status';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    font-family: \"Open Sans\", \"PT Sans\", \"Roboto\", -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    min-height: 100%;\n    font-size: 16px;\n    line-height: 1.5;\n    background: #ddd;\n  }\n  @keyframes blink {\n    0% {\n      transform: scale(1);\n      opacity: .5;\n    }\n    50% {\n      transform: scale(1.05);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1);\n      opacity: .5;\n    }\n  }\n`;\nconst Layout = styled.div`\n  position: relative;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: space-between;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 0 1.5rem;\n`;\nconst Header = styled.header`\n  position: relative;\n  padding: 1rem 0;\n  display: flex;\n  justify-content: center;\n  .logo {\n    transform-origin: 50% 50%;\n    animation: blink 3.6s infinite alternate ease-out;\n    background: #ddd;\n    font-size: 1rem;\n    text-align: center;\n    width: 120px;\n    height: 120px;\n    overflow: hidden;\n    line-height: 120px;\n    border-radius: 30rem;\n    border: 8px solid #ae2b26;\n    color: #ae2b26;\n    font-weight: bold;\n    box-shadow: 4px 4px 12px rgba(0,0,0,.2),\n                -4px -4px 12px rgba(255,255,255,1),\n                -4px -4px 12px rgba(255,255,255,1) inset,\n                4px 4px 12px rgba(0,0,0,.2) inset;\n  }\n`;\nconst Content = styled.section`\n  position: relative;\n  padding: 1.5rem 0;\n`;\nconst Footer = styled.footer`\n  position: relative;\n  text-align: center;\n  padding: 1rem 0;\n  .copyright {\n    font-size: 14px;\n    color: #888;\n    text-shadow: 1px 1px 1px rgba(0,0,0,.05);\n    a {\n      color: #ae2b26;\n      opacity: .6;\n    }\n  }\n`;\nconst Intro = styled.div`\n  position: relative;\n  padding: 1rem 2rem;\n  text-shadow: 1px 1px 1px rgba(0,0,0,.05);\n  color: #888;\n  background: #ddd;\n  background: linear-gradient(to top, #e3e3e3, #efefef);\n  box-shadow: 4px 4px 12px rgba(0,0,0,.05),\n                -4px -4px 12px rgba(255,255,255,.1),\n                -4px -4px 12px rgba(255,255,255,.1) inset;\n  margin-bottom: 2rem;\n  border-radius: 30px;\n  h2 {\n    font-weight: normal;\n    color: #333;\n  }\n  @media screen and (max-width: 480px){\n    display: none;\n  }\n`;\n\nexport default function Home() {\n  return (\n    <Layout>\n      <GlobalStyle />\n      <Header>\n        <div className=\"logo\">COVID-19</div>\n      </Header>\n      <Content>\n        <Intro>\n          <h2>Update informasi seputar COVID-19 harian</h2>\n          <p>Menyikapi kasus pandemik virus COVID-19 yang makin meluas, saya menyediakan media informasi yang cukup tepat dan cukup akurat untuk menjadi panduan kita semua.</p>\n          <p>Data yang disajikan tidaklah akurat 100%, sehingga jika terdapat kesalahan mohon di maklumi.</p>\n        </Intro>\n        <Status url=\"https://covid19.mathdro.id/api/countries/id\" />\n      </Content>\n      <Footer>\n        <div className=\"copyright\">Made with &hearts; by <a href=\"https://www.ervandra.com\" target=\"_blank\" rel=\"noreferrer noopener\">Ervandra Halim</a> using <a href=\"https://github.com/mathdroid/covid19\" target=\"_blank\" rel=\"noreferrer noopener\">Covid19 API</a></div>\n      </Footer>\n    </Layout>\n  );\n}","import React from 'react';\nimport Home from './pages/index';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}